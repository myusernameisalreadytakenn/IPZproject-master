
<!DOCTYPE html>
<html lang="en">
<head>

    <title>Title</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <script src="https://code.jquery.com/jquery-3.4.1.min.js" integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
    <script src='https://kit.fontawesome.com/a076d05399.js'></script>

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO"
    crossorigin="anonymous">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src=https://cdnjs.cloudflare.com/ajax/libs/mathjs/3.3.0/math.min.js></script>

    <style>
    body{
        padding: 50px 0 0 0;

    }
    .navbar{
        background-color: #512DA8;
    }
    .active {
      background-color: green ;
    }
    .footer {
      background-color: #b6a4e0;
      margin: 0px auto;
      padding: 20px 0px; }

    </style>

</head>
<body>
    <nav class="navbar navbar-dark navbar-expand-sm fixed-top">
        <div class="container">
          <div class="collapse navbar-collapse" id="navbar">
              <ul class="navbar-nav mr-auto" >
                <button type="button" class="btn btn-success" onclick="change_usual_form();" data-toggle="collapse" data-target="#usual_form" aria-expanded="true" aria-controls="usual_form" id="btn_usual_form">
                  Звичайний
                </button>
                &nbsp;
                <button type="button" class="btn btn-default" onclick="change_parametric_form();" data-toggle="collapse" data-target="#parametric_form" aria-expanded="false" aria-controls="parametric_form" id="btn_parametric_form">
                   Параметричний
                </button>
                &nbsp;
                <button type="button" class="btn btn-default" onclick="change_polar_form();" data-toggle="collapse" data-target="#polar_form" aria-expanded="false" aria-controls="polar_form" id="btn_polar_form">
                   Полярний
                </button>
              </ul>
          </div>
              <div class="btn-group">
                    <button type="button" class="btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                      <span class="fa fa-bars"></span> Menu
                    </button>
                    <div class="dropdown-menu">
                      <a class="dropdown-item" href="#" data-toggle="modal" data-target="#aboutModal">Про нас</a>
                    </div>
              </div>
        </div>

      </nav>
      &nbsp;
      <div class="row">
        <div class="col-md-1">
        </div>
        <div class="col-md-5" id="cnvDiv" onmousedown="this.style.cursor='move'; saveCursorCoord(event);" onmouseup="mouseDown=false; this.style.cursor='default';" onmousemove="moveWithMouse(event);">
                  <p style="margin: 0;">
                    <canvas  id="cnv" width="1200" height="650"><br></canvas>
                  </p>
        </div>
        <div class="col-md-5">
          <div class="collapse" id="usual_form" style="padding: 5px; display: inline;">
            <div class="card card-body">
              <div class="row">
                  <div class="col-md-8" >
                    <div class="row">
                        <div class="">
                          <label ><h5>f(x)=</h5>
                        </div>
                        <div class="">
                          <input class="forn-control" id="func_field" placeholder="Функція" >
                        </div>
                    </div>
                    <div class="row">
                      <p style="color:red;">*Примітка:<br>Функції записувати через крапку з комою</p>
                    </div>
                  </div>
                  <div class="col-md-2">
                    <button type="button" class="btn " onclick="graphButtonClick()">
                      Побудувати графік
                    </button>
                  </div>


              </div>
            </div>
          </div>

          <div class="collapse" id="parametric_form" style="padding: 5px;"  >
            <div class="card card-body">
              <div class="row">
                  <div class="col-md-6">
                    <div class="row">
                      <label ><h5>x(t)=</h5></label>
                      &nbsp;
                      <div>
                          <input class="forn-control" id="function1_parametric" placeholder="Функція" >
                      </div>
                    </div>
                    <div class="row">
                      <label><h5>y(t)=</h5></label>
                      &nbsp;
                      <div>
                          <input class="forn-control" id="function2_parametric" placeholder="Функція" >
                      </div>
                    </div>
                    <div class="row">
                      <label><h5>tє[</h5></label>
                      &nbsp;
                      <div>
                          <input class="forn-control" id="t1_parametric" style="width: 45px;" placeholder="t1" >
                      </div>
                        <label><h5>&#59;</h5></label>
                      <div>
                        <input class="forn-control" id="t2_parametric" style="width: 45px;" placeholder="t2" >
                        <label><h5>&#93;</h5></label>
                      </div>
                    </div>
                  </div>
                  <div class="col-md-2">
                    <button type="button" class="btn" onclick="graphButtonClick()">
                      Побудувати графік
                    </button>
                  </div>
              </div>
              <div class="row">
                <p style="color:red;">*Примітка:<br>Функції записувати через крапку з комою</p>
              </div>
            </div>
          </div>

          <div class="collapse" id="polar_form" style="padding: 5px; " >
            <div class="card card-body">
              <div class="row">
                  <div class="col-md-5">
                    <div class="row">
                      <label ><h5>r(t)=</h5></label>
                      &nbsp;
                      <div>
                          <input class="forn-control" id="function_polar" placeholder="Функція" >
                      </div>
                    </div>
                    <div class="row">
                      <label><h5>tє[</h5></label>
                      &nbsp;
                      <div>
                          <input class="forn-control" id="t1_polar" style="width: 45px;" placeholder="t1" >

                      </div>
                      <label><h5>&#59;</h5></label>
                      <div>
                          <input class="forn-control" id="t2_polar" style="width: 45px;" placeholder="t2" >
                      </div>
                      <label><h5>&#93;</h5></label>
                    </div>

                  </div>
                  <div class="col-md-2">
                    <button type="button" class="btn" onclick="graphButtonClick()">
                      Побудувати графік
                    </button>
                  </div>
              </div>
              <div class="row">
                <p style="color:red;">*Примітка:<br>Функції записувати через крапку з комою</p>
              </div>
            </div>

          </div>
          <div class="row">
              {{{body}}}
          </div>
        </div>

      </div>

      <div class="modal fade" id="aboutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">Розробники</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              Комар Назар <br>  Лялін Ігор <br> Вигнанчук Андрій
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
          </div>
        </div>
      </div>

      <footer class="footer">
        <div class="container">
            <div class="row">
                <div class="col-4 offset-1 col-sm-2">
                    <h5>Links</h5>
                    <ul class="list-unstyled">
                        <li><a href="#" onclick="change_usual_form();"><i class="fa fa-home fa-lg"></i> Home</a></li>
                        <li><a href="#" data-toggle="modal" data-target="#aboutModal">  &nbsp;<i class="fa fa-info fa-lg"></i>  &nbsp; About</a></li>
                    </ul>
                </div>
                <div class="col-12 col-sm-4 align-self-center">
                    <div class="text-center">
                        <a class="btn btn-social-icon btn-google" href="http://google.com/+"><i class="fa fa-google-plus fa-lg"></i></a>
                        <a class="btn btn-social-icon btn-facebook"  href="http://www.facebook.com/profile.php?id="><i class="fa fa-facebook fa-lg"></i></a>
                        <a class="btn btn-social-icon btn-twitter" href="http://twitter.com/"><i class="fa fa-twitter fa-lg"></i></a>
                        <a class="btn btn-social-icon" href="mailto:"><i class="fa fa-envelope-o fa-lg"></i></a>
                    </div>
                </div>
           </div>
        </div>
    </footer>
    <script type="text/javascript" language="javascript">

      var OPoint = [0, 0];
      var scale = [1, 0];
      var clr = ['#81d742', '#1e73be', '#dd9933', '#dd3333', '#8224e3', '#eeee22'];

      setTimeout(graphButtonClick, 0);


      var cursorPos = [0, 0];
      var mouseDown = false;

      var plot_mode = 0;


      var funcString = '';
      var tString = '';


      var func = [];
      var mint, maxt;
      /*
      function get_value_db(){
        document.getElementById('btn_create').classList.contains('btn-info')){
          document.getElementById('btn_create').classList.remove('btn-info');
          document.getElementById('btn_create').classList.add('btn-danger');
          db_func += document.getElementById('btn_create').value;
          db_func += ';';
          graphButtonClick();
        } else{
          document.getElementById('btn_create').classList.remove('btn-danger');
          document.getElementById('btn_create').classList.add('btn-info');
          db_func='';
          graphButtonClick();
        };
      }
      */
      function saveCursorCoord(event) {
          mouseDown = true;
          var x, y;
          if (document.all) {
              x = event.x + document.body.scrollLeft;
              y = event.y + document.body.scrollTop;
          } else {
              x = event.pageX;
              y = event.pageY;
          }
          cursorPos[0] = x;
          cursorPos[1] = y;
      }


      function moveWithMouse(event) {
          if (mouseDown) {
              var x, y;
              if (document.all) {
                  x = event.x + document.body.scrollLeft;
                  y = event.y + document.body.scrollTop;
              } else {
                  x = event.pageX;
                  y = event.pageY;
              }
              OPoint[0] = parseInt(OPoint[0]) + parseInt(x - cursorPos[0]);
              OPoint[1] = parseInt(OPoint[1]) + parseInt(y - cursorPos[1]);
              cursorPos[0] = x;
              cursorPos[1] = y;
              graph();
          }
      }

      function graphButtonClick() {
          func = [];
          funcString = '';
          tString = '';
          if (plot_mode == 0) {

              var s = document.getElementById('func_field').value.replace('\n', '');
              for (var i = 0; s.length != 0; i++) {
                  var index = s.indexOf(';');
                  if (index == -1) {
                      index = s.length;
                  }
                  funcString += s.substring(0, index) + ';';
                  func[i] = math.compile(convertExpression(s.substring(0, index)));
                  s = s.substring(index + 1, s.length);
              }
          } else if (plot_mode == 1) {
              tString = document.getElementById('t1_parametric').value + ';' + document.getElementById('t2_parametric').value;
              mint = math.eval(document.getElementById('t1_parametric').value);
              maxt = math.eval(document.getElementById('t2_parametric').value);
              var sx = document.getElementById('function1_parametric').value.replace('\n', '');
              var sy = document.getElementById('function2_parametric').value.replace('\n', '');
              for (var i = 0; sx.length != 0 && sy.length != 0; i += 2) {
                  var index = sx.indexOf(';');
                  if (index == -1) {
                      index = sx.length;
                  }
                  funcString += sx.substring(0, index) + ';';
                  func[i] = math.compile(convertExpression(sx.substring(0, index)));
                  sx = sx.substring(index + 1, sx.length);
                  index = sy.indexOf(';');
                  if (index == -1) {
                      index = sy.length;
                  }
                  funcString += sy.substring(0, index) + ';';
                  func[i + 1] = math.compile(convertExpression(sy.substring(0, index)));
                  sy = sy.substring(index + 1, sy.length);
              }
          } else {
              tString = document.getElementById('t1_polar').value + ';' + document.getElementById('t2_polar').value;
              mint = math.eval(document.getElementById('t1_polar').value);
              maxt = math.eval(document.getElementById('t2_polar').value);
              var s = document.getElementById('function_polar').value.replace('\n', '');
              for (var i = 0; s.length != 0; i++) {
                  var index = s.indexOf(';');
                  if (index == -1) {
                      index = s.length;
                  }
                  funcString += s.substring(0, index);
                  func[i] = math.compile(convertExpression(s.substring(0, index)));
                  s = s.substring(index + 1, s.length);
              }
          }

          graph();
      }
      function graph() {
          var my_canvas = document.getElementById("cnv");
          var c = my_canvas.getContext("2d");
          c.clearRect(0, 0, 635, 635);
          my_canvas.width = 635;
          c.translate(300.5, 300.5);
          c.beginPath();
          for (var x = -300 + OPoint[0] % 50; x <= 300; x += 50) {
            c.moveTo(x, -300);
            c.lineTo(x, 300);
          }
          for (var y = -300 + OPoint[1] % 50; y < 301; y += 50) {
            c.moveTo(-300, y);
            c.lineTo(300, y);
          }
          c.strokeStyle = "#ddf";
          c.closePath();
          c.stroke();

          c.beginPath();
          if (Math.abs(OPoint[0]) <= 300) {
            c.moveTo(OPoint[0], -300);
            c.lineTo(OPoint[0], 300);
          }
          if (Math.abs(OPoint[1] <= 300)) {
            c.moveTo(300, OPoint[1]);
            c.lineTo(-300, OPoint[1]);
          }

          for (var x = OPoint[0] % 50 - 300; x < 290; x += 50) {
          if (x < -290) {
              continue;
          } else {
              c.fillText(1 * ((x - OPoint[0]) * scale[0] / 50).toFixed(3), x - 3, 310);
          }
          }
          for (var y = OPoint[1] % 50 - 300; y < 290; y += 50) {
          if (y < -290) {
              continue;
          } else {
              c.fillText(1 * (-(y - OPoint[1]) * scale[0] / 50).toFixed(3), 305, y + 3);
          }
          }
          c.strokeStyle = "#555";
          c.closePath();
          c.stroke();
          if (plot_mode == 0) {
              for (var i = 0; i < func.length; i++) {
                  c.beginPath();
                  c.lineWidth = 2;
                  c.lineJoin = 'round';
                  var spacing = 0.5;
                  var y = 0, x = 0;
                  var cx = [];
                  var cy = [];
                  var scope = {
                      x: 0,
                      tg: math.tan,
                      ctg: math.cot,
                      ln: math.log,
                      arcsin: math.asin,
                      arccos: math.acos,
                      arctg: math.atan,
                      arcctg: arcctg,
                      lg: math.log10,
                      sh: math.sinh,
                      ch: math.cosh,
                      th: math.tanh,
                      cth: math.coth
                  };
                  for (cx[0] = -300; cx[0] <= 300; cx[0] += spacing) {
                      scope.x = (cx[0] - OPoint[0]) * scale[0] / 50.0;
                      y = func[i].eval(scope);
                      cy[0] = (-y * 50.0 / scale[0] + parseInt(OPoint[1]));

                      if (Math.abs(cy[0]) <= 300 && Math.abs(cy[1]) <= 300) {
                          c.moveTo(cx[1], cy[1]);
                          c.lineTo(cx[0], cy[0]);
                          if (Math.abs(cy[0] - cy[1]) / spacing > 10) {
                              spacing = Math.max(spacing / Math.abs(cy[0] - cy[1]), 0.01);
                          } else {
                              spacing = 0.5;
                          }
                      }
                      cy[1] = cy[0];
                      cx[1] = cx[0];
                  }
                  c.strokeStyle = clr[i % 6];
                  c.stroke();

              }
          }
          else if (plot_mode == 1) {
              for (var i = 0; i < func.length; i += 2) {
                  c.beginPath();
                  c.lineWidth = 2;
                  c.lineJoin = 'round';
                  var spacing = 0.01;
                  var y = 0, x = 0;
                  var cx = [];
                  var cy = [];
                  scope = {
                      t: 0,
                      tg: math.tan,
                      ctg: math.cot,
                      ln: math.log,
                      arcsin: math.asin,
                      arccos: math.acos,
                      arctg: math.atan,
                      arcctg: arcctg,
                      lg: math.log10,
                      sh: math.sinh,
                      ch: math.cosh,
                      th: math.tanh,
                      cth: math.coth
                  };
                  for (var t = mint; t <= maxt; t += spacing) {
                      scope.t = t;
                      x = func[i].eval(scope);
                      y = func[i + 1].eval(scope);
                      cx[0] = x * 50.0 / scale[0] + parseInt(OPoint[0]);
                      cy[0] = -y * 50.0 / scale[0] + parseInt(OPoint[1]);
                      if (Math.abs(cy[0]) <= 300 && Math.abs(cy[1]) <= 300 && Math.abs(cx[0]) <= 300 && Math.abs(cx[1]) <= 300) {
                          c.moveTo(cx[1], cy[1]);
                          c.lineTo(cx[0], cy[0]);
                      }
                      cy[1] = cy[0];
                      cx[1] = cx[0];
                  }
                  c.strokeStyle = clr[((i / 2) + 5) % 6];
                  c.stroke();
              }

          } else {
              for (var i = 0; i < func.length; i++) {
                  c.beginPath();
                  c.lineWidth = 2;
                  c.lineJoin = 'round';
                  var spacing = 0.005;
                  var y = 0, x = 0;
                  var cx = [];
                  var cy = [];
                  var scope = {
                      x: 0,
                      tg: math.tan,
                      ctg: math.cot,
                      ln: math.log,
                      arcsin: math.asin,
                      arccos: math.acos,
                      arctg: math.atan,
                      arcctg: arcctg,
                      lg: math.log10,
                      sh: math.sinh,
                      ch: math.cosh,
                      th: math.tanh,
                      cth: math.coth
                  };
                  for (var t = mint; t <= maxt; t += spacing) {
                      scope.t = t;
                      r = func[i].eval(scope);
                      x = r * Math.cos(t);
                      y = r * Math.sin(t);
                      cx[0] = x * 50.0 / scale[0] + parseInt(OPoint[0]);
                      cy[0] = -y * 50.0 / scale[0] + parseInt(OPoint[1]);
                      if (Math.abs(cy[0]) <= 300 && Math.abs(cy[1]) <= 300 && Math.abs(cx[0]) <= 300 && Math.abs(cx[1]) <= 300) {
                          c.moveTo(cx[1], cy[1]);
                          c.lineTo(cx[0], cy[0]);
                      }
                      cy[1] = cy[0];
                      cx[1] = cx[0];
                  }
                  c.strokeStyle = clr[(i + 3) % 6];
                  c.stroke();
              }

          }

          c.beginPath();
          c.lineWidth = 1;
          c.lineJoin = 'round';
          c.moveTo(-300, -300);
          c.lineTo(300, -300);
          c.lineTo(300, 300);
          c.lineTo(-300, 300);
          c.lineTo(-300, -300);
          c.strokeStyle = '#1e73be';
          c.stroke();

          function arcctg(x) {
              return Math.PI / 2 - math.atan(x);
          }
      }

      function convertExpression(s) {
          s = s.replace(/\|(.*?)\|/gi, 'abs($1)');
          s = s.replace(' ', '');

          while (s.indexOf('log') != -1) {
              var index = s.indexOf('log');
              var leftIndex = index + 3;
              var rightIndex = findPairBreaket(s, leftIndex);
              var args = s.substring(leftIndex + 1, rightIndex);
              var arg1 = s.substring(leftIndex + 1, findTopLevelComma(args) + leftIndex + 1);
              var arg2 = s.substring(findTopLevelComma(args) + leftIndex + 2, rightIndex);
              s = s.substring(0, index) + '(ln(' + arg2 + ')/ln(' + arg1 + '))' + s.substring(rightIndex + 1, s.length);
          }

          return s;
      }

      function findTopLevelComma(s) {
          var i;
          var br = 0;
          for (i = 0; i < s.length; i++) {
              if (s.charAt(i) == '(') {
                  br++;
              } else if (s.charAt(i) == ')') {
                  br--;
              } else if (s.charAt(i) == ',' && br == 0) {
                  return i;
              }
          }
          return -1;
      }

      function findPairBreaket(s, index) {
          var breaket = 0;
          if (s.charAt(index) == '(') {
              breaket++;
              while (breaket != 0 && index < s.length - 1) {
                  index++;
                  if (s.charAt(index) == '(') {
                      breaket++;
                  } else if (s.charAt(index) == ')') {
                      breaket--;
                  }
              }
              return index;
          } else if (s.charAt(index) == ')') {
              breaket--;
              while (breaket != 0 && index > 0) {
                  index--;
                  if (s.charAt(index) == '(') {
                      breaket++;
                  } else if (s.charAt(index) == ')') {
                      breaket--;
                  }
              }
              return index;
          }
          return 0;
      }




      function change_usual_form() {
        document.getElementById('btn_usual_form').classList.remove('btn-default');
        document.getElementById('btn_usual_form').classList.add('btn-success');
        document.getElementById('btn_polar_form').classList.remove('btn-success');
        document.getElementById('btn_polar_form').classList.add('btn-default');
        document.getElementById('btn_parametric_form').classList.remove('btn-success');
        document.getElementById('btn_parametric_form').classList.add('btn-default');

        document.getElementById('usual_form').style.display = 'inline';
        document.getElementById('parametric_form').style.display = 'none';
        document.getElementById('polar_form').style.display = 'none';

        document.getElementById("function_polar").value = "";
        document.getElementById("function1_parametric").value = "";
        document.getElementById("function2_parametric").value = "";
        setTimeout(graphButtonClick, 0);
        var plot_mode = 0;
      }
      function change_parametric_form() {
        document.getElementById('btn_usual_form').classList.remove('btn-success');
        document.getElementById('btn_usual_form').classList.add('btn-default');
        document.getElementById('btn_polar_form').classList.remove('btn-success');
        document.getElementById('btn_usual_form').classList.add('btn-default');
        document.getElementById('btn_parametric_form').classList.remove('btn-default');
        document.getElementById('btn_parametric_form').classList.add('btn-success');

        document.getElementById('usual_form').style.display = 'none';
        document.getElementById('parametric_form').style.display = 'inline';
        document.getElementById('polar_form').style.display = 'none';
        document.getElementById("func_field").value = "";
        document.getElementById("function_polar").value = "";
        setTimeout(graphButtonClick, 0);
        plot_mode = 1;
      }
      function change_polar_form() {
        document.getElementById('btn_usual_form').classList.remove('btn-success');
        document.getElementById('btn_usual_form').classList.add('btn-default');
        document.getElementById('btn_parametric_form').classList.remove('btn-success');
        document.getElementById('btn_parametric_form').classList.add('btn-default');
        document.getElementById('btn_polar_form').classList.remove('btn-default');
        document.getElementById('btn_polar_form').classList.add('btn-success');

        document.getElementById('usual_form').style.display = 'none';
        document.getElementById('parametric_form').style.display = 'none';
        document.getElementById('polar_form').style.display = 'inline';

        document.getElementById("func_field").value = "";
        document.getElementById("function1_parametric").value = "";
        document.getElementById("function2_parametric").value = "";
        setTimeout(graphButtonClick, 0);
        plot_mode = 2;
      }


    </script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    </body>
</html>
